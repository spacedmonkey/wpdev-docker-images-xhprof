<?php

// The latest stable version of PHP that is supported in WordPress trunk.
$latest = '7.4';

/**
 * An array of all PHP versions that we need to generate images for, and their config settings.
 *
 * Each PHP version has settings for the PHP base image, the PHPUnit image, and the WP_CLI image.
 *
 * The minimum version of PHP required as of WordPress 5.2 is 5.6.20+.
 *
 * @see https://make.wordpress.org/core/handbook/references/php-compatibility-and-wordpress-versions/
 *
 * @param array $php {
 *     @type string $base_name       The name of the Docker image to base our image off of.
 *     @type array  $apt             An array of apt packages that need to be installed.
 *     @type array  $extensions      An array of PHP extensions that need to be enabled.
 *     @type array  $pecl_extensions An array of PECL-sourced PHP extensions that will be installed, but not enabled.
 * }
 *
 * @param int $phpunit The major version branch of PHPUnit to install on this image.
 *
 * @param array|false $cli {
 *     @type string $mysql_client The name of the MySQL client Ubuntu package on this image.
 *     @type string $download_url The download URL for the version of WP-CLI to install on this image.
 * }
 */
$php_versions = array(
	'5.6.20' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:5.6.20-fpm',
		),
	),
	'5.6' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:5.6-fpm',
		),
	),
	'7.0' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:7.0-fpm',
		),
	),
	'7.1' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:7.1-fpm',
		),
	),
	'7.2' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:7.2-fpm',
		),
	),
	'7.3' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:7.3-fpm',
		),
	),
	'7.4' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:7.4-fpm',
		),
	),
	'8.0' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:8.0-fpm',
		),
	),
	'8.1' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:8.1-fpm',
		),
	),
	'8.2' => array(
		'php' => array(
			'base_name'       => 'wordpressdevelop/php:8.2-fpm',
		 ),
	),
);


// A warning that will be added to each Dockerfile, to ensure folks don't edit them directly.
$generated_warning = <<<EOT
##########################################################################
#
# WARNING: This file was generated by update.php.
#
# You can find the relevant template in the `/templates` folder.
#
EOT;

// Load the templates.
$templates = array(
	'php'     => file_get_contents( 'templates/Dockerfile-php.template' ),
);

$phpunit_combinations = array();

// Loop through each PHP version, and generate the Dockerfiles.
foreach ( $php_versions as $version => $images ) {
	$title = "| PHP $version |";
	echo str_repeat( '-', strlen( $title ) ) . "\n";
	echo "$title\n";
	echo str_repeat( '-', strlen( $title ) ) . "\n";

	foreach ( $images as $image => $config ) {
		echo str_pad( $image, 15, '.' );
		echo shell_exec( "mkdir -p images/{$version}/{$image}" );

		$dockerfile = $templates[ $image ];

		$dockerfile = str_replace( '%%GENERATED_WARNING%%', $generated_warning, $dockerfile );

		// PHPUnit and WP-CLI image parent tags vary depending on whether it's a PHP version, or "latest".
		if ( 'latest' === $version ) {
			$version_tag = 'latest';
		} else {
			$version_tag = "$version-fpm";
		}
		$dockerfile = str_replace( '%%VERSION_TAG%%', $version_tag, $dockerfile );

			// Replace tags inside the PHP Dockerfile template.
		$dockerfile = str_replace( '%%BASE_NAME%%', $config['base_name'], $dockerfile );

		// Cleanup any leftover tags.
		$dockerfile = preg_replace( '/%%[^%]+%%/', '', $dockerfile );

		// Write the real Dockerfile.
		write_file( "images/{$version}/{$image}/Dockerfile", $dockerfile );

		echo "âœ…\n";
	}

	// Load the GitHub Actions template.
	$workflow_template = file_get_contents( 'templates/workflow.yml-template' );
	$workflow_template = str_replace( '%%GENERATED_WARNING%%', $generated_warning, $workflow_template );

	$php_version_list = "'" . implode( "', '", array_keys( $php_versions ) ) . "'";
	$workflow_template = str_replace( '%%PHP_VERSION_LIST%%', $php_version_list, $workflow_template );

	$phpunit_version_list = "'" . implode( "', '", array_values( $phpunit_combinations ) ) . "'";
	$workflow_template = str_replace( '%%PHPUNIT_COMBINATIONS%%', $phpunit_version_list, $workflow_template );

	$workflow_template = str_replace( '%%PHP_LATEST%%', $latest, $workflow_template );

	write_file( '.github/workflows/docker-hub.yml', $workflow_template );
}

/**
 * Write file.
 *
 * @param string $file     File path.
 * @param string $contents File contents.
 */
function write_file( $file, $contents ) {
	$fh = fopen( $file, 'w' );
	fwrite( $fh, $contents );
	fclose( $fh );
}
